id: camera_offline_notifier
blueprint:
  name: Camera Offline Notifier RELEASE (v0.0.7)
  homeassistant:
    min_version: "2024.6.0"
  description: Receive push notifications on a mobile device when selected cameras go offline. This ensures timely awareness of any camera connectivity issues.
  
  domain: automation
  
  source_url: https://github.com/thenextbutton/home_assistant/blob/main/blueprints/camera_offline/camera_offline_release.yaml
  
  input:
    camera_selection:
      name: Camera Selection
      description: "Choose which camera(s) to monitor for offline events."
      icon: mdi:cctv
      collapsed: false
      input:
        cameras:
          name: Camera(s) to Monitor
          description: Select one or more camera entities for offline status monitoring.
          selector:
            entity:
              filter:
                domain: camera
              multiple: true

    notification_actions:
      name: Notification Settings
      description: "Configure how alerts are received for offline cameras."
      icon: mdi:cellphone
      collapsed: true
      input:
        notify_devices:
          name: Device(s) to Notify
          description: Select the mobile device (running the Home Assistant app) to receive offline notifications.
          selector:
            device:
              filter:
                integration: mobile_app
              multiple: true

        offline_duration:
          name: Offline Duration
          description: Set the duration a camera must be offline (unavailable) before a notification is sent.
          default: { hours: 0, minutes: 2, seconds: 0 }
          selector:
            duration:
              enable_day: false
              enable_millisecond: false

        cooldown_duration:
          name: Cooldown Duration
          description: "Set the cooldown duration. Once a camera offline notification is sent, **no further notifications (for any camera)** will be sent until this period expires. Set to 0 to disable."
          default: { hours: 0, minutes: 0, seconds: 0 }
          selector:
            duration:
              enable_day: false
              enable_millisecond: false

        notification_title:
          name: Notification Title
          description: Enter the desired title for the push notification.
          default: "ðŸš¨ Camera Offline Alert ðŸš¨"
          selector:
            text:
              multiline: false
              type: text
              multiple: false

        notification_message:
          name: Notification Message
          description: Customize the message that will appear in the push notification.
          default: >
            {% set total_seconds = (now() - trigger.to_state.last_changed).total_seconds() | int %}
            {% set seconds = total_seconds % 60 %}
            {% set minutes = (total_seconds // 60) % 60 %}
            {% set hours = total_seconds // 3600 %}
            Camera '{{ trigger.to_state.attributes.friendly_name }}' ({{ trigger.entity_id }}) is offline and has been for {{ "%02d:%02d:%02d" | format(hours, minutes, seconds) }}!
          selector:
            text:
              multiline: true
              type: text
              multiple: false

        notification_critical:
          name: Critical Notification
          description: Enable this option to send a critical alert that bypasses silent mode settings on the device.
          default: false
          selector:
            boolean:

mode: queued
triggers:
  - trigger: state
    entity_id: !input cameras
    to: "unavailable"
    for: !input offline_duration

action:
  - variables:
      notification_title: !input notification_title
      notification_message: !input notification_message
      notification_critical: !input notification_critical
      notify_devices: !input notify_devices
      cooldown_input_data: !input cooldown_duration
      cooldown_seconds: >
        {{ (
            ( cooldown_input_data.hours | default(0) ) | int * 3600 ) +
            ( ( cooldown_input_data.minutes | default(0) ) | int * 60 ) +
            ( ( cooldown_input_data.seconds | default(0) ) | int )
        }}

  - condition: template
    value_template: >
      {{ cooldown_seconds == 0 or this.attributes.last_triggered is not defined or this.attributes.last_triggered is none or (now() - this.attributes.last_triggered).total_seconds() >= cooldown_seconds }}

  - repeat:
      for_each: !input notify_devices 
      sequence:
        - service_template: 'notify.mobile_app_{{ device_attr(repeat.item, ''name'') | lower | replace('' '', ''_'') | replace("''", '''') | replace(''â€™'', '''') }}'
          data:
            title: "{{ notification_title }}"
            message: "{{ notification_message }}"
            data: >
              {% if notification_critical %}
              {% set critical_data = {
                  'ttl': 0,
                  'priority': 'high',
                  'push': {
                      'sound': {
                          'name': 'default',
                          'critical': 1,
                          'volume': 1.0
                      }
                  }
              } %}
              {{ critical_data }}
              {% else %}
              {}
              {% endif %}
